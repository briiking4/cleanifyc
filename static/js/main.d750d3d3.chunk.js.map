{"version":3,"sources":["components/CleanPlaylist.js","components/MainSearch.js","components/Home.js","components/Profile.js","components/ListItems.js","components/Search.js","components/Score.js","components/Library.js","components/Navigation.js","components/Stream.js","App.js","serviceWorker.js","index.js","logo.png","emptyPlaylist.png","profPic.png"],"names":["spotifyApi","SpotifyWebApi","CleanPlaylist","props","state","userId","playlistName","name","playlistId","data","ownerId","buttonPressed","loadingData","newPlaylistId","revealUnable","explicitTracks","cleanTracks","noCleanVersions","recTracks","timesClicked","unaddCounter","openPlaylist","makeCleanPlaylist","bind","findCleanTrack","getRecommended","unableToAdd","addTrack","getUser","owner","id","explicitTracksList","cleanTracksList","getPlaylistTracks","then","response","items","map","item","track","explicit","push","this","getMe","setState","getTracksData","window","scrollTo","artist","artists","counter","search","searchResult","tracks","itemC","includes","cleanTrack","console","log","itemE","length","trackUri","newId","x","uri","createPlaylist","playlistResult","external_urls","spotify","addTracksToPlaylist","trackId","tracksList","slice","splice","getRecommendations","limit","seed_tracks","recommededResult","itemR","elem","document","getElementById","parseInt","getAttribute","style","backgroundColor","innerHTML","removeTracksFromPlaylist","setAttribute","unavalible","index","key","recommendedTracks","className","type","clicks","onClick","src","width","height","frameBorder","allowtransparency","allow","title","href","target","rel","disabled","React","Component","MainSearch","useState","location","Home","userTopTracksList","setUserTopTracks","topTracksList","setTopTracks","userPlaylists","setUserPlaylists","searchItemSelected","setSelected","selectedValue","setSelectedValue","useEffect","a","getMyTopTracks","list","i","getUserPlaylists","getUserTopTracks","getTopTracks","getPlaylists","horiz","itemSelected","selectedItem","TrackProfile","setList","photo","trackInfo","setInfo","buttonClicked","setButton","getTrack","album","images","url","getTracks","getTrackInfo","alt","renderClean","ListItems","horizOn","setSelect","setValue","sendData","showSearch","display_name","musicNote","logo","showSearchHoriz","Search","searchList","setSearchList","recentList","setRecent","playlistList","setPlaylists","userTracksList","setUserTracks","value","filterStatus","setStatus","setLoading","useRef","getMyRecentlyPlayedTracks","getRecentItems","total","itemCount","offset","concat","getMySavedTracks","getUserTracks","searchValue","toLowerCase","playlists","searchOnChange","e","filterChange","onChange","placeholder","Score","songTitle","songArtist","setLyrics","sexually_explicit","profanity","score","setScore","perspective","Perspective","apiKey","process","requestUrl","fetch","method","headers","lyricsResult","json","lyrics","replace","substr","analyze","attributes","perspectiveResult","sex","attributeScores","SEXUALLY_EXPLICIT","summaryScore","PROFANITY","getScore","text","Math","round","styles","buildStyles","pathColor","textColor","Library","withRouter","profPic","userPic","profName","userName","Navbar","Nav","to","pathname","getAccessToken","Stream","App","token","getHashParams","access_token","setAccessToken","ReactGA","initialize","pageview","loggedIn","devices","logout","hashParams","r","q","hash","substring","exec","decodeURIComponent","getUserProfile","path","exact","component","top","delay","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.d750d3d3.chunk.js","sourcesContent":["import React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass CleanPlaylist extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      userId:'',\n      playlistName: this.props.name,\n      playlistId: this.props.data,\n      ownerId: '',\n      buttonPressed: false,\n      loadingData: false,\n      newPlaylistId: '',\n      revealUnable: false,\n    };\n\n    this.explicitTracks = [];\n    this.cleanTracks = [];\n    this.noCleanVersions = [];\n    this.recTracks = [];\n    this.timesClicked = 1;\n    this.unaddCounter = 1;\n    this.openPlaylist = \"\";\n    this.makeCleanPlaylist = this.makeCleanPlaylist.bind(this)\n    this.findCleanTrack = this.findCleanTrack.bind(this)\n    this.getRecommended = this.getRecommended.bind(this)\n    this.unableToAdd = this.unableToAdd.bind(this)\n    this.addTrack = this.addTrack.bind(this)\n    this.getUser = this.getUser.bind(this)\n  }\n\n\n  getTracksData(owner, id){\n    var explicitTracksList = []\n    var cleanTracksList = []\n    spotifyApi.getPlaylistTracks(owner, id)\n      .then((response) => {\n        response.items.map((item) =>{\n          if(item.track.explicit === true){\n            explicitTracksList.push(item.track)\n          }else{\n            cleanTracksList.push(item.track)\n          }\n        })\n      })\n      this.explicitTracks = explicitTracksList\n      this.cleanTracks = cleanTracksList\n\n\n    }\n    getUser(){\n      spotifyApi.getMe()\n       .then((response) => {\n         this.setState({\n          userId: response.id\n         })\n       });\n    }\n\n    componentDidMount(){\n      var playlistId = this.props.data\n      this.getUser()\n      this.getTracksData(this.state.userId, playlistId)\n      window.scrollTo(0, 0)\n    }\n\n    async findCleanTrack(track){\n      var name = track.name\n      var artist = track.artists[0].name\n      var cleanTrack;\n      var itemC;\n      var counter = 0;\n        let searchResult = await spotifyApi.search('track: ' +name+ ' artist: '+ '\"'+ artist + '\"' ,['track'])\n        for (itemC of searchResult.tracks.items){\n          if (itemC.explicit === false){\n            if((itemC.name === name || itemC.name.includes(\"Clean\")) && (itemC.artists[0].name === artist && counter <= 0) ){\n              cleanTrack = itemC\n              counter ++\n            }\n          }\n        }\n        if (counter === 0 ){\n          cleanTrack = null\n        }\n\n        return cleanTrack\n    }\n\n    async makeCleanPlaylist(){\n      console.log(this.state.userId)\n\n      this.setState({\n        loadingData: true\n      })\n\n      var itemE;\n      for (itemE of this.explicitTracks) {\n        let cleanTrack = await this.findCleanTrack(itemE)\n        if (cleanTrack === null){\n          this.noCleanVersions.push(itemE)\n        }else{\n          this.cleanTracks.push(cleanTrack)\n        }\n      }\n\n      if (this.noCleanVersions.length > 0){\n        this.recTracks = await this.getRecommended(this.noCleanVersions)\n\n      }\n\n       var trackUri = [];\n       var newId = '';\n       var x;\n       for (x of this.cleanTracks){\n         trackUri.push(x.uri)\n       }\n        let playlistResult = await spotifyApi.createPlaylist(this.state.userId, {name: this.state.playlistName + \"(Clean)\"})\n        this.openPlaylist = playlistResult.external_urls.spotify\n        newId = playlistResult.id\n\n        let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, newId, trackUri)\n\n        this.setState({\n          newPlaylistId: newId,\n          buttonPressed: true\n        })\n\n    }\n\n    async getRecommended(tracks){\n      var trackId = [];\n      var tracksList = tracks.slice();\n      var recTracks =[];\n\n      if (tracks.length > 5){\n        tracksList.splice(5,tracks.length)\n      }\n\n      tracksList.map((item) => {\n        trackId.push(item.id)\n      })\n\n      let recommededResult = await spotifyApi.getRecommendations({limit: 20, seed_tracks: trackId})\n      var itemR;\n\n        for (itemR of recommededResult.tracks) {\n          if (itemR.explicit === true){\n            let cleanTrack = await this.findCleanTrack(itemR)\n            if (cleanTrack !== null){\n              recTracks.push(cleanTrack)\n            }\n\n          }else{\n            recTracks.push(itemR)\n          }\n        }\n\n        if (recTracks.length > 10){\n          recTracks = recTracks.slice(0,10)\n        }\n\n      return recTracks\n    }\n\n   unableToAdd(){\n     this.timesClicked ++\n     if (this.timesClicked % 2 === 0){\n       this.setState({\n         revealUnable: true\n       })\n     }else{\n       this.setState({\n         revealUnable: false\n       })\n     }\n    }\n\n     async addTrack(track){\n       // this.unaddCounter ++\n       var elem = document.getElementById(track.id);\n       var counter = parseInt(elem.getAttribute(\"clicks\"))\n       var uri = track.uri\n       counter ++\n       if (counter % 2 === 0){\n         let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, this.state.newPlaylistId, [uri])\n         elem.style.backgroundColor = \"green\";\n         elem.innerHTML = \"DONE\";\n       }else{\n         let addResult = await spotifyApi.removeTracksFromPlaylist(this.state.userId, this.state.newPlaylistId, [uri])\n         elem.style.backgroundColor = \"#565656\";\n         elem.innerHTML = \"ADD\";\n\n       }\n       elem.setAttribute(\"clicks\", counter);\n    }\n\n\n  render(){\n\n    const unavalible =\n    this.noCleanVersions.map(function(item, index) {\n      index++\n      return (\n        <p key={item.id}> {index}. {item.name}</p>\n      )\n    });\n\n\n    const recommendedTracks =\n    this.recTracks.map(function(item) {\n      return (\n        <div key= {item.id}>\n        <div className=\"row my-2\">\n          <div className=\"col-3 col-lg-1 mt-3\">\n            <button type=\"button\" className=\"btn btn-add\" id={item.id} clicks = \"1\" onClick={() => this.addTrack(item)}>ADD</button>\n          </div>\n          <div className=\"col-9 col-lg-11\">\n            <iframe src= {\"https://open.spotify.com/embed/track/\" + item.id } width=\"100%\" height=\"80\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-track\"></iframe>\n          </div>\n        </div>\n        </div>\n      )\n    }, this);\n\n\n\n\n\n\n\n    return(\n      <div className= \"Clean col-12\">\n\n      {\n        this.state.buttonPressed ?\n        <div className= \"mx-auto\">\n          <h3 className=\"font-weight-bold text-success\"> Your Playlist Is Cleanified! </h3>\n          <p> You're done! We have already saved it to your library!</p>\n            <a href= {this.openPlaylist} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-success\"> Open In Spotify </a>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.newPlaylistId} width=\"100%\" height=\"290\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n          </div>\n        </div>\n          <hr className=\"divider mb-3\"/>\n\n          <div>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.unableToAdd}> Reveal Songs Unable to be Cleaned: {this.noCleanVersions.length}</button>\n            {\n              this.state.revealUnable && this.noCleanVersions.length > 0 ?\n                unavalible\n              :\n              this.state.revealUnable &&\n               <p>Good News! We were able to find clean versions of each song!</p>\n            }\n            {\n              this.noCleanVersions.length > 0 &&\n              <div>\n              <hr className=\"divider mt-5\"/>\n              <h4>Recommended Clean Songs</h4>\n              <p>Based on the songs we were unable to add: </p>\n              <div className=\"container\">\n\n                {recommendedTracks}\n              </div>\n              </div>\n            }\n\n\n          </div>\n\n        </div>\n        :\n          <div>\n            <button type=\"button\" className=\"btn btn-lg btn-success mt-5\" onClick= {this.makeCleanPlaylist} disabled={this.state.loadingData}>\n            { this.state.loadingData &&\n              <i className=\"fa fa-compact-disc fa-spin text-white\"></i>\n            }\n            Clean Playlist\n            </button>\n\n            <div>\n              <iframe className=\"rounded\" src= {\"https://open.spotify.com/embed/playlist/\" + this.state.playlistId} width=\"100%\" height=\"400\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n            <p className=\"text-muted single-space\"><small> Note: Spotify's explicit content tags are applied based on information Spotify receives from rights-holders. They can’t guarantee all explicit content is marked as such. Cleanify will clean your playlist based off of Spotify's marked explicit/clean songs.</small></p>\n\n          </div>\n      }\n\n      </div>\n    )\n  }\n}\n\nexport default CleanPlaylist\n","import React, { useState, useEffect } from 'react';\nimport Score from './Score'\nimport Search from './Search'\n\n\nfunction MainSearch(props) {\n\n  const [searchSelected, setSelect] = useState(false)\n\n  function handleSelect(){\n    setSelect(true)\n  }\n\n   return (\n\n      <div id=\"mainSearch\" className=\"pt-3\">\n\n            <Search location=\"search\"/>\n\n\n      </div>\n    );\n}\n\nexport default MainSearch\n","import React, { useState, useEffect } from 'react';\nimport ListItems from './ListItems'\nimport Profile from './Profile'\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\n\nfunction Home(props) {\n\n  const [userTopTracksList, setUserTopTracks] = useState(null)\n  const [topTracksList, setTopTracks] = useState(null)\n  const [userPlaylists, setUserPlaylists] = useState(null)\n\n  const [searchItemSelected, setSelected] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('')\n\n    useEffect(() => {\n      console.log(\"IM IN\")\n\n      async function getUserTopTracks(){\n        let searchResult = await spotifyApi.getMyTopTracks()\n        const items = await searchResult\n        console.log(items.items)\n        setUserTopTracks(items.items)\n\n      }\n      async function getTopTracks(){\n        let list = []\n        let searchResult = await spotifyApi.getPlaylistTracks('billboard.com','6UeSakyzhiEt4NB3UAd6NQ',{limit:20})\n        const items = await searchResult\n        for (let i of items.items){\n          list.push(i.track)\n        }\n        console.log(list)\n        setTopTracks(list)\n      }\n\n      async function getPlaylists(){\n        let list = []\n        let searchResult = await spotifyApi.getUserPlaylists({limit:20})\n        const items = await searchResult\n        console.log(items.items)\n        setUserPlaylists(items.items)\n      }\n\n\n      getUserTopTracks()\n      getTopTracks()\n      getPlaylists()\n\n    },[]);\n\n\n   return (\n//list.map is not a function\n\n      <div id=\"Home\" className=\"pt-2\">\n      {searchItemSelected ?\n        <Profile id={selectedValue.id} name={selectedValue.name} artist={selectedValue.artist} type={selectedValue.type} location='home'/>\n        :\n        <div>\n          <h5 className=\"text-left font-weight-bold text-yellow\">Popular Singles</h5>\n          {topTracksList ?\n              <ListItems horiz={true} list={topTracksList} type='track' itemSelected={setSelected} selectedItem={setSelectedValue}/>\n            :\n            <></>\n          }\n          <h5 className=\"text-left font-weight-bold text-yellow\">Your Top Tracks</h5>\n          {userTopTracksList ?\n              <ListItems horiz={true} list={userTopTracksList} type='track' itemSelected={setSelected} selectedItem={setSelectedValue}/>\n            :\n            <></>\n          }\n          <h5 className=\"text-left font-weight-bold text-yellow\">Your Playlists</h5>\n          {userPlaylists ?\n              <ListItems horiz={true} list={userPlaylists} type='playlist' itemSelected={setSelected} selectedItem={setSelectedValue}/>\n            :\n            <></>\n          }\n\n        </div>\n      }\n\n      </div>\n    );\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react';\nimport ListItems from './ListItems'\nimport CleanPlaylist from './CleanPlaylist'\nimport Lyrics from './Lyrics'\nimport Score from './Score'\nimport Library from './Library'\nimport MainSearch from './MainSearch'\nimport Home from './Home'\n\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport './Profile.css'\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport Explicit from '@material-ui/icons/Explicit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LyricsIcon from '@mui/icons-material/Lyrics';\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\n\n\nconst spotifyApi = new SpotifyWebApi();\n\n\nfunction TrackProfile(props) {\n\nconst id  = props.id\nconst name = props.name\nconst artist = props.artist\nconst type= props.type\nconst location = props.location\nconsole.log(location)\n\n\nconst [tracksList, setList] = useState(null)\n\nconst [trackInfo, setInfo] = useState({id:'' , name:'', photo: ''})\n\nconst [lyricsOn, setLyricsOn] = useState(false)\n\nconst [scoreOn, setScoreOn] = useState(false)\n\nconst [buttonClicked, setButton] = useState(false)\n\n\n\n  useEffect(()=>{\n\n    console.log(type)\n\n    async function getTracks(name, artist){\n      let searchResult = await spotifyApi.search('track: ' +name+ ' artist: '+ '\"'+ artist + '\"' ,['track'])\n      console.log(searchResult)\n\n      setList(searchResult.tracks.items)\n    }\n\n    async function getTrackInfo(id){\n      let searchResult = await spotifyApi.getTrack(id)\n      setInfo({id: id, name: searchResult.name, artist:searchResult.artists[0].name, explicit:searchResult.explicit, photo: searchResult.album.images[0].url})\n      console.log(searchResult)\n    }\n\n    if (type == 'track'){\n      console.log(\"IM IN\")\n      getTracks(name, artist)\n      getTrackInfo(id)\n    }\n\n  },[]);\n\nfunction renderTag(){\n  let state = '';\n  let color = '';\n  if (trackInfo.explicit ){\n    state = 'EXPLICIT'\n    color = 'text-danger'\n  }else{\n    state = 'CLEAN'\n    color = 'text-warning'\n\n  }\n\n  let tag = <div className={`explicit-tag ${color}`} >\n              <p className=\"explicit-text\">{state}</p>\n            </div>\n\n  return tag;\n}\n\nfunction showLyrics(){\n  setLyricsOn(!lyricsOn)\n}\n\n function findCleanTrack(list){\n  var cleanTrack;\n  var itemC;\n  var counter = 0;\n    for (itemC of list){\n      if (itemC.explicit === false){\n        if((itemC.name === name || itemC.name.includes(\"Clean\")) && (itemC.artists[0].name === artist && counter <= 0) ){\n          cleanTrack = itemC\n          counter ++\n        }\n      }\n    }\n    if (counter === 0 ){\n      cleanTrack = null\n    }\n\n    return cleanTrack\n}\n\nfunction renderClean(){\n  let list = []\n  let cleanTrack = findCleanTrack(tracksList)\n  list.push(cleanTrack)\n  console.log(list)\n\n  const showTrack = cleanTrack ?\n                      <ListItems list={list} type='track'/>\n                    :\n                    <h6>There are no clean versions</h6>\n\n  return showTrack\n}\n\nfunction showScore(){\n  setScoreOn(!scoreOn)\n}\n\nfunction handleBackButton(){\n  setButton(true)\n}\n\n//profile when clicked in list on clean verisons not working\n\n\n   return (\n\n\n     <div id=\"profile\" className=\"\">\n     { buttonClicked ?\n        location == 'search' ?\n         <MainSearch/>\n         :\n         location == 'library' ?\n         <Library/>\n         :\n         <Home/>\n       :\n       <>\n       <div className=\"text-left\">\n         <button className=\"btn mt-n2 mb-n2 ml-n1\" onClick={() => handleBackButton()}><ArrowCircleLeftIcon className=\"text-yellow float-left back-arrow\"/></button>\n       </div>\n\n\n        { tracksList && type == 'track' ?\n          <div>\n            <div className=\"row justify-content-center\">\n\n              <img src={trackInfo.photo} id= {trackInfo.id} className=\"profile-card\" alt=\"card\"/>\n\n            </div>\n\n            <div className=\"row justify-content-center\">\n             <p className=\"mt-1 font-weight-bold\">{trackInfo.name}\n\n               {trackInfo.explicit ?\n               <Explicit className=\"ml-2 text-danger float-right\"/>\n               :\n               <></>\n               }\n             </p>\n            </div>\n\n            <div className=\"row justify-content-center\">\n             <p className=\"font-weight-bold\">{trackInfo.artist}</p>\n            </div>\n\n            <div className=\"row justify-content-center\">\n              <div className=\"col\">\n               <FavoriteIcon/>\n              </div>\n\n              <div className=\"col\">\n               <LyricsIcon/>\n\n              </div>\n            </div>\n\n            <div>\n             <Score title={trackInfo.name} artist={trackInfo.artist}/>\n\n            </div>\n\n            <div>\n\n               <h5 className=\"mt-4\">Clean Version(s)</h5>\n\n               {renderClean()}\n\n            </div>\n\n\n          </div>\n          :\n          <></>\n        }\n        {type == 'playlist' ?\n         <CleanPlaylist name={name} data={id}/>\n         :\n         <></>\n        }\n        </>\n     }\n     </div>\n\n\n    );\n}\n\nexport default TrackProfile\n","import React, { useState, useEffect } from 'react';\nimport './ListItems.css';\nimport Profile from './Profile';\nimport Explicit from '@material-ui/icons/Explicit';\nimport logo from '../logo.png'\nimport musicNote from '../emptyPlaylist.png'\n\n\n\n\nfunction ListItems(props) {\n  console.log(\"rendered\")\n  console.log(\"list\" + props.list)\n\n\n  const list = props.list\n  const type = props.type\n  const horizOn = props.horiz\n\n  console.log('type ' + type)\n\n  const [selected, setSelect] = useState(false)\n\n  const [selectedValue, setValue] = useState({id:'', name: '', artist:'', type:''})\n// send this to Search\n\n  useEffect(() =>{\n\n  },[props.list,props.type])\n\n  const sendData = (id,name,artist) => {\n    setValue({id:id, name: name, artist:artist })\n    setSelect(true)\n    props.itemSelected(true)\n    props.selectedItem({id:id, name: name, artist:artist, type: type })\n    console.log(\"selected\")\n  }\n\n\n  const showSearch =\n    list.map(function(item) {\n        return (\n          <div key={item.id} className=\"p-2\" onClick={() => sendData(item.id,item.name,\n            type == 'playlist' ?\n              item.owner.display_name\n            :\n            type == 'track' ?\n              item.artists[0].name\n            :\n            <></>\n          )\n\n          }\n        >\n            <div className=\"row\">\n              <div className=\"col-3\">\n\n                <img src={\n                  type == 'playlist' ?\n                    item.images.length > 0 ?\n                      item.images[0].url\n                      :\n                      musicNote\n                  :\n                  type == 'track' ?\n                    item.album.images[0].url\n                  :\n                  <></>\n                }\n                id= {item.id}\n                className=\"search-card\"\n                alt=\"card\"/>\n\n              </div>\n              <div className=\"col-8 search-title\">\n                <div className=\"row\">\n                  <div className=\"col-10\">\n                    <p className=\"font-weight-bold text-overflow\">{item.name}</p>\n                  </div>\n\n                  <div className=\"col-2\">\n                  {type == 'track' ?\n                    item.explicit ?\n                      <Explicit className=\"ml-2 text-danger\"/>\n                      :\n                      <img src={logo} width=\"45\"/>\n                    :\n                    item.name.includes(\"(Clean)\") ?\n                     <img src={logo} width=\"45\"/>\n                     :\n                     <></>\n                  }\n\n                  </div>\n                </div>\n                {\n                  type == 'playlist' ?\n                    <p>{item.owner.display_name}</p>\n                  :\n                  type == 'track' ?\n                    <p>{item.artists[0].name}</p>\n                  :\n                  <></>\n\n                }\n\n\n              </div>\n\n            </div>\n          </div>\n        )\n    });\n\n    const showSearchHoriz =\n      list.map(function(item) {\n          return (\n            <div key={item.id} className=\"col-4\" onClick={() => sendData(item.id,item.name,\n              type == 'playlist' ?\n                item.owner.display_name\n              :\n              type == 'track' ?\n                item.artists[0].name\n              :\n              <></>\n            )\n\n            }\n          >                <img src={\n                  type == 'playlist' ?\n                    item.images.length > 0 ?\n                      item.images[0].url\n                      :\n                      musicNote\n                  :\n                  type == 'track' ?\n                    item.album.images[0].url\n                  :\n                  <></>\n                }\n                id= {item.id}\n                className=\"search-card\"\n                alt=\"card\"/>\n\n                <p className=\"text-left text-overflow\"><small className=\"font-weight-bold\">{item.name}</small></p>\n\n                {\n                  type == 'playlist' ?\n                  <p className=\"text-left text-overflow\"><small className=\"font-weight-bold\">{item.owner.display_name}</small></p>\n                :\n                type == 'track' ?\n                  <p className=\"text-left text-overflow\"><small className=\"font-weight-bold\">{item.artists[0].name}</small></p>\n                :\n                <></>\n               }\n\n              </div>\n          )\n      });\n\n   return (\n\n      <div id=\"search\" className=\"pt-3\">\n      {\n        horizOn ?\n          <div className=\"row flex-row flex-nowrap horiz\">\n            {showSearchHoriz}\n          </div>\n        :\n        showSearch\n      }\n\n\n      </div>\n    );\n}\n\nexport default ListItems\n","import React, { useState, useEffect, useRef } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport ListItems from './ListItems'\nimport Profile from './Profile'\nimport logo from '../logo.png'\nimport './Search.css';\n\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Search(props) {\n\n  const location = props.location\n  console.log(location)\n\n  const [searchList, setSearchList] = useState(null);\n  const [recentList, setRecent] = useState(null);\n  const [playlistList, setPlaylists] = useState(null);\n  const [userTracksList, setUserTracks] = useState(null);\n  const [value, setValue] = useState('');\n  const [filterStatus, setStatus] = useState('track');\n  const [searchItemSelected, setSelected] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('')\n  const [loadingData, setLoading] = useState(true)\n\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    console.log(\"mounted\")\n\n    async function getRecentItems(){\n      let searchResult = await spotifyApi.getMyRecentlyPlayedTracks()\n      console.log(searchResult)\n      let list= []\n      for (let i of searchResult.items){\n        list.push(i.track)\n      }\n      console.log(\"RECENT\")\n      setRecent(list)\n    }\n    if(location == 'library'){\n      getRecentItems()\n    }\n    return () => {\n      setRecent({}); // This worked for me\n    };\n\n     },[]);\n\n  useEffect(() =>{\n    async function getUserPlaylists(){\n      let total = 1\n      let itemCount = 0\n      let list = []\n      while(itemCount < total){\n        let response = await spotifyApi.getUserPlaylists({limit:50,offset:itemCount})\n        const items = await response\n        itemCount += items.items.length\n        total = items.total\n        list = list.concat(items.items)\n      }\n      console.log(list)\n      setPlaylists(list)\n    }\n    if(location == 'library'){\n      getUserPlaylists()\n    }\n    return () => {\n      setPlaylists({}); // This worked for me\n    };\n\n  },[]);\n\n  useEffect(() =>{\n    async function getUserTracks(){\n      let total = 1\n      let itemCount = 0\n      let list = []\n      while(itemCount < total){\n        let response = await spotifyApi.getMySavedTracks({limit:50,offset:itemCount})\n        const items = await response\n        itemCount += items.items.length\n        total = items.total\n        for (let i of items.items){\n          list.push(i.track)\n        }\n      }\n      console.log(\"TRACKS\")\n      setUserTracks(list)\n      setLoading(false)\n    }\n    if(location == 'library'){\n      getUserTracks()\n    }\n    return () => {\n      setUserTracks({});\n    };\n\n  },[]);\n\n\n  // const getRecentItems = async () =>{\n  //   try{\n  //     let searchResult = await spotifyApi.getMyRecentlyPlayedTracks()\n  //     console.log(searchResult)\n  //     let list= []\n  //     for (let i of searchResult.items){\n  //       list.push(i.track)\n  //     }\n  //    setRecent(list)\n  //   }\n  //   catch(e){\n  //     console.log(e)\n  //   }\n  // }\n\n\n  const search = async (value, type) => {\n    try{\n      let searchValue = value.toLowerCase()\n      if (location == 'library'){\n        let searchList = []\n        console.log(\"in Library\")\n        console.log(userTracksList)\n        console.log(playlistList)\n\n        if(type == 'track'){\n          for(let i of userTracksList){\n            let name = i.name.toLowerCase()\n            if(name.includes(searchValue)){\n              console.log(name)\n              console.log(name.includes(value))\n\n              searchList.push(i)\n            }\n          }\n          setSearchList(searchList)\n        }\n        if(type == 'playlist'){\n          for(let i of playlistList){\n            let name = i.name.toLowerCase()\n            if(name.includes(searchValue)){\n              searchList.push(i)\n            }\n          }\n          setSearchList(searchList)\n        }\n      }else{\n        let response= ''\n        let list = []\n        response = await spotifyApi.search(value, [type])\n        const items = await response\n        console.log(items)\n        if(type == 'track'){\n           list = items.tracks.items\n        }\n        if(type == 'playlist'){\n           list = items.playlists.items\n        }\n        console.log(list)\n        setSearchList(list)\n      }\n\n    }\n    catch(e){\n      console.log(e)\n\n    }\n  }\n// add in search whether or not its in their library -- ultimate to set search list\n  const searchOnChange = async (e) =>{\n    if(e.target.value == ''){\n      setSearchList(null)\n    }\n     console.log(e.target.value)\n     search(e.target.value, filterStatus)\n     setValue(e.target.value)\n  }\n\n  function renderItems() {\n    console.log(searchList)\n\n    let items = <p className=\"pt-3\">Search items</p>\n      items = <ListItems list={searchList} type={filterStatus} itemSelected={setSelected} selectedItem={setSelectedValue}/>\n    return items;\n  }\n\n  function renderRecentPlayedTracks() {\n    console.log(recentList)\n    let items =\n      <>\n        <p className=\"pt-3 text-left text-muted\">Recently Played</p>\n        <ListItems list={recentList} type={filterStatus} itemSelected={setSelected} selectedItem={setSelectedValue}/>\n      </>\n    return items;\n  }\n  function renderUserPlaylists() {\n\n    let items =\n      <>\n        <p className=\"pt-3 text-left text-muted\">Playlists</p>\n        <ListItems list={playlistList} type={filterStatus} itemSelected={setSelected} selectedItem={setSelectedValue}/>\n      </>\n    return items;\n  }\n\n\n\n  const filterChange = (e) => {\n    console.log(e.target.value);\n    if(e.target.value == 'track'){\n      setStatus('track')\n      setSearchList(null)\n    }\n    if(e.target.value == 'playlist'){\n      setStatus('playlist')\n      setSearchList(null)\n\n    }\n\n  }\n\n\n\n   return (\n     <div>\n      { searchItemSelected ?\n\n        <Profile id={selectedValue.id} name={selectedValue.name} artist={selectedValue.artist} type={selectedValue.type} location={location} />\n\n      :\n      <div id=\"search\" className=\"\">\n      {location == 'library' ?\n        <h3 className=\"text-left text-yellow font-weight-bold\">Your Library</h3>\n        :\n        <h3 className=\"text-left text-yellow font-weight-bold\">Search</h3>\n\n      }\n        <div className=\"d-flex filter justify-content-center\">\n          <button type=\"button\" value=\"track\" onClick={e => filterChange(e)}\n          className={`btn filter-option ${filterStatus == 'track' ? 'selected-option' : ''}`}>\n          {location == 'library' ?\n            \"Liked\"\n            :\n            \"Song\"\n          }</button>\n          <button type=\"button\" value=\"playlist\" onClick={e => filterChange(e)} className={`btn filter-option ${filterStatus == 'playlist' ? 'selected-option' : ''}`}>Playlists</button>\n\n        </div>\n\n          <input value={value}\n                 onChange = {e => searchOnChange(e)}\n                 className=\"search-input\"\n                 placeholder=\"search track, playlist, or artist\"\n          />\n\n        {searchList && value != '' ?\n          renderItems()\n          :\n          <></>\n\n        }\n        {\n          recentList && value == '' && filterStatus == 'track' && location == 'library' ?\n           renderRecentPlayedTracks()\n          :\n          <></>\n        }\n        {\n          playlistList && value == '' && filterStatus == 'playlist' && location == 'library' ?\n           renderUserPlaylists()\n          :\n          <></>\n        }\n\n\n      </div>\n\n      }\n      </div>\n    );\n}\n\nexport default Search\n","import React, { useState, useEffect } from 'react';\n\nimport Perspective from 'perspective-api-client';\nimport Search from './Search';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport './Score.css'\n\n\nfunction Score(props) {\n\n  const songTitle = props.title\n  const songArtist = props.artist\n  console.log(songTitle)\n\n\n  const [lyrics, setLyrics] = useState('')\n  const [score, setScore] = useState({sexually_explicit: '', profanity: ''})\n\n  const perspective = new Perspective({apiKey: process.env.REACT_APP_PERSPECTIVE_API_KEY});\n\n\n  useEffect(()=>{\n\n      async function getScore(){\n        try{\n          let requestUrl = `https://api.lyrics.ovh/v1/${songArtist}/${songTitle}`\n          let lyricsResult = await fetch(requestUrl, {method: 'GET', headers: {'Content-Type': 'application/json'}})\n          lyricsResult = await lyricsResult.json()\n          let lyrics = lyricsResult.lyrics.replace(/.*/, \"\").substr(1)\n          setLyrics(lyrics);\n\n          const perspectiveResult = await perspective.analyze(lyrics, {attributes: ['PROFANITY','SEXUALLY_EXPLICIT', 'THREAT','TOXICITY']});\n          console.log(perspectiveResult)\n          const sex = perspectiveResult.attributeScores.SEXUALLY_EXPLICIT.summaryScore.value\n          const profanity = perspectiveResult.attributeScores.PROFANITY.summaryScore.value\n\n          setScore({sexually_explicit: sex * 100, profanity: profanity * 100 })\n        }\n        catch(e){\n          console.log('Catch an error: ', e)\n\n        }\n\n      }\n\n      getScore()\n  },[props.title]);\n\n  console.log(score.profanity)\n\n\n   return (\n\n      <div id=\"score\" className=\"pt-5 row\">\n        <div className=\"donut col\">\n          <CircularProgressbar value={score.sexually_explicit}\n          text={`${Math.round(score.sexually_explicit)}%`}\n          styles={buildStyles({\n            pathColor: `${score.sexually_explicit <= 33.33 ? '#4caf50' : (score.sexually_explicit > 33.67 && score.sexually_explicit < 66.67) ? '#ffc107' : score.sexually_explicit >= 66.67 ? '#b70000' : '' }`,\n            textColor: `${score.sexually_explicit <= 33.33 ? '#4caf50' : (score.sexually_explicit > 33.67 && score.sexually_explicit < 66.67) ? '#ffc107' : score.sexually_explicit >= 66.67 ? '#b70000' : '' }`\n          })}\n           />\n\n           <p className=\"font-weight-bold mt-1\">Sexual</p>\n        </div>\n\n        <div className=\"donut col\">\n          <CircularProgressbar value={score.profanity}\n          text={`${Math.round(score.profanity)}%`}\n          styles={buildStyles({\n            pathColor: `${score.profanity <= 33.33 ? '#4caf50' : (score.profanity > 33.67 && score.profanity < 66.67) ? '#ffc107' : score.profanity >= 66.67 ? '#b70000' : '' }`,\n            textColor:`${score.profanity <= 33.33 ? '#4caf50' : (score.profanity > 33.67 && score.profanity < 66.67) ? '#ffc107' : score.profanity >= 66.67 ? '#b70000' : '' }`\n          })}\n          />\n          <p className=\"font-weight-bold mt-1\">Profanity</p>\n        </div>\n\n      </div>\n    );\n}\n\nexport default Score\n","import React, { useState, useEffect } from 'react';\nimport CleanPlaylist from './CleanPlaylist'\nimport './Library.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Score from './Score'\nimport Search from './Search'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Library(props) {\n\n\n\n   return (\n\n      <div id=\"library\" className=\"p-2\">\n        <Search location=\"library\"/>\n\n\n\n\n      </div>\n    );\n}\n\nexport default Library\n","import React from \"react\";\nimport './Navigation.css';\nimport { Link, withRouter } from \"react-router-dom\";\nimport {Navbar, Nav} from 'react-bootstrap';\nimport logo from '../logo.png'\nimport HomeIcon from '@material-ui/icons/Home';\nimport Search from '@material-ui/icons/Search';\nimport LibraryMusic from '@material-ui/icons/LibraryMusic';\n\n\n\nfunction Navigation(props) {\n    const profPic = props.userPic\n    const profName= props.userName\n\n  return (\n    <>\n    <div className=\"row profile\">\n        <img src= {profPic} className=\"profPic rounded-circle img-fluid\" alt=\"profile pic\"/>\n        <h1 className=\"profName\">{profName}</h1>\n        <button type=\"button\" className=\"btn btn-danger btn-sm mx-0 logout float-right\" >Log Out</button>\n    </div>\n\n      <Navbar className=\"fixed-bottom navbar\" >\n          <Nav className=\"mx-auto\">\n\n            <Link className=\"btn\" to=\"/\"><HomeIcon className={`nav-bar-icon  ${\n              props.location.pathname === \"/\" ? \"active\" : \"\"\n            }`} /></Link>\n\n            <Link className=\"btn\" to=\"/search\"><Search className={`nav-bar-icon  ${\n              props.location.pathname === \"/search\" ? \"active\" : \"\"\n            }`} /></Link>\n\n            <Link className=\"btn\" to=\"/library\"><LibraryMusic className={`nav-bar-icon  ${\n              props.location.pathname === \"/library\" ? \"active\" : \"\"\n            }`} /></Link>\n\n          </Nav>\n      </Navbar>\n\n    </>\n\n  );\n}\n\nexport default withRouter(Navigation);\n","import React, { useState, useEffect } from 'react';\nimport Lyrics from './Lyrics'\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport WebPlayback from './WebPlayback'\n\n\nconst spotifyApi = new SpotifyWebApi();\nconst token = spotifyApi.getAccessToken()\n\n\n\nfunction Stream() {\n\n\n   return (\n\n      <div id=\"stream\" className=\"pt-5\">\n        <WebPlayback token= {token}/>\n\n      </div>\n    );\n}\n\nexport default Stream\n","import React, {Component} from 'react';\nimport profPic from './profPic.png';\nimport logo from './logo.png'\nimport Zoom from 'react-reveal/Zoom';\nimport Fade from 'react-reveal/Fade';\n\nimport './App.css';\nimport Library from './components/Library'\nimport Home from './components/Home'\n\nimport Navigation from './components/Navigation'\nimport Login from './components/Login'\nimport Stream from './components/Stream'\nimport MainSearch from './components/MainSearch'\n\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport ReactGA from 'react-ga';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\n\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass App extends Component {\n\nconstructor (){\n  super();\n  const params = this.getHashParams();\n  const token =  params.access_token;\n\n  if (token) {\n     spotifyApi.setAccessToken(token);\n  }\n\n    ReactGA.initialize('UA-172518785-1');\n    ReactGA.pageview(window.location.pathname);\n\n  this.state ={\n    userId: '',\n    loggedIn: token ? true : false,\n    profPic: '',\n    name: '',\n    devices: '',\n    token: ''\n  }\n\n  this.logout = this.logout.bind(this)\n}\n\n getHashParams() {\n  console.log(\"hi\");\n   var hashParams = {};\n   var e, r = /([^&;=]+)=?([^&;]*)/g,\n       q = window.location.hash.substring(1);\n       console.log(q);\n   while ( e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n   }\n   console.log(hashParams);\n\n   return hashParams;\n }\n\n\n  getUserProfile(){\n    spotifyApi.getMe()\n      .then((response) => {\n        if ((response.images.length === 0)){\n          this.setState ({\n            userId: response.id,\n            profPic: profPic,\n            name: response.display_name\n          })\n        }else{\n          this.setState ({\n            userId: response.id,\n            profPic: response.images[0].url,\n            name: response.display_name\n          })\n        }\n      })\n  }\n\n  componentDidMount(){\n      this.getUserProfile()\n  }\n\n  logout(){\n    this.setState({\n      loggedIn:false\n    })\n    window.location.href = \"\"\n  }\n\n\n\n  render(){\n    const userId = this.state.userId\n    let token = ''\n\n    if (this.state.loggedIn){\n      token = spotifyApi.getAccessToken()\n    }\n\n\n    return (\n\n      <div className=\"App\">\n\n        {\n          this.state.loggedIn ?\n           <div>\n            <Router>\n              <Navigation userName= {this.state.name} userPic= {this.state.profPic}  />\n              <Switch>\n                <Route path=\"/\" exact component={() => <Home />} />\n                <Route path=\"/search\" exact component={() => <MainSearch />} />\n                <Route path=\"/library\" exact component={() => <Library />} />\n\n\n              </Switch>\n            </Router>\n\n            </div>\n          :\n          <div id=\"login\" className=\"login\">\n            <Fade top>\n            <div>\n                <img src={logo} className=\"logo img-fluid text-center\" alt=\"logo\"/>\n                <h1 className=\"logo-title font-weight-bold\">Cleanify</h1>\n            </div>\n            </Fade>\n            <Zoom delay={1000}>\n              <div>\n              <a id=\"login-button\" href=\"/login\" className=\"btn btn-success\">Log in with Spotify</a>\n              </div>\n            </Zoom>\n          </div>\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.856b7ae0.png\";","module.exports = __webpack_public_path__ + \"static/media/emptyPlaylist.30b581fc.png\";","module.exports = __webpack_public_path__ + \"static/media/profPic.cc02a310.png\";"],"sourceRoot":""}